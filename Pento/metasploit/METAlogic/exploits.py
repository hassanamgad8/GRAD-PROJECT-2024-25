from .rpc_client import get_client

def identify_ip_and_os(target_ip):
    try:
        client = get_client()

        # Use Metasploit auxiliary module for single IP scanning
        scanner = client.modules.use('auxiliary', 'scanner/portscan/syn')
        scanner['RHOSTS'] = target_ip  # Set the single IP address
        scanner['THREADS'] = 1  # Use a single thread since it's a single IP

        # Execute the scan
        scan_results = scanner.execute()
        if scan_results['job_id'] is None:
            return {"status": "error", "message": "Failed to start the scan."}

        # Wait for the scan to complete
        job_id = scan_results['job_id']
        while client.jobs.list.get(str(job_id)):
            pass  # Wait until the job finishes

        # Fetch host details for OS identification
        hosts = client.db.hosts
        os_results = []
        for host in hosts:
            if host['address'] == target_ip:
                os_results.append({
                    "ip": host['address'],
                    "os": host.get('os_name', 'Unknown'),
                    "status": "active" if host['state'] == "alive" else "inactive"
                })

        return {"status": "success", "os_results": os_results}
    except Exception as e:
        return {"status": "error", "message": str(e)}
